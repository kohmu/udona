{"ast":null,"code":"// decode-buffer.js\nexports.DecodeBuffer = DecodeBuffer;\n\nvar preset = require(\"./read-core\").preset;\n\nvar FlexDecoder = require(\"./flex-buffer\").FlexDecoder;\n\nFlexDecoder.mixin(DecodeBuffer.prototype);\n\nfunction DecodeBuffer(options) {\n  if (!(this instanceof DecodeBuffer)) return new DecodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nDecodeBuffer.prototype.codec = preset;\n\nDecodeBuffer.prototype.fetch = function () {\n  return this.codec.decode(this);\n};","map":{"version":3,"sources":["C:/Users/kohmu/udonarium/node_modules/msgpack-lite/lib/decode-buffer.js"],"names":["exports","DecodeBuffer","preset","require","FlexDecoder","mixin","prototype","options","codec","bufferish","fetch","decode"],"mappings":"AAAA;AAEAA,OAAO,CAACC,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC;;AAEA,IAAIE,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAP,CAAyBC,WAA3C;;AAEAA,WAAW,CAACC,KAAZ,CAAkBJ,YAAY,CAACK,SAA/B;;AAEA,SAASL,YAAT,CAAsBM,OAAtB,EAA+B;AAC7B,MAAI,EAAE,gBAAgBN,YAAlB,CAAJ,EAAqC,OAAO,IAAIA,YAAJ,CAAiBM,OAAjB,CAAP;;AAErC,MAAIA,OAAJ,EAAa;AACX,SAAKA,OAAL,GAAeA,OAAf;;AACA,QAAIA,OAAO,CAACC,KAAZ,EAAmB;AACjB,UAAIA,KAAK,GAAG,KAAKA,KAAL,GAAaD,OAAO,CAACC,KAAjC;AACA,UAAIA,KAAK,CAACC,SAAV,EAAqB,KAAKA,SAAL,GAAiBD,KAAK,CAACC,SAAvB;AACtB;AACF;AACF;;AAEDR,YAAY,CAACK,SAAb,CAAuBE,KAAvB,GAA+BN,MAA/B;;AAEAD,YAAY,CAACK,SAAb,CAAuBI,KAAvB,GAA+B,YAAW;AACxC,SAAO,KAAKF,KAAL,CAAWG,MAAX,CAAkB,IAAlB,CAAP;AACD,CAFD","sourcesContent":["// decode-buffer.js\n\nexports.DecodeBuffer = DecodeBuffer;\n\nvar preset = require(\"./read-core\").preset;\n\nvar FlexDecoder = require(\"./flex-buffer\").FlexDecoder;\n\nFlexDecoder.mixin(DecodeBuffer.prototype);\n\nfunction DecodeBuffer(options) {\n  if (!(this instanceof DecodeBuffer)) return new DecodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nDecodeBuffer.prototype.codec = preset;\n\nDecodeBuffer.prototype.fetch = function() {\n  return this.codec.decode(this);\n};\n"]},"metadata":{},"sourceType":"script"}