{"ast":null,"code":"// read-token.js\nvar ReadFormat = require(\"./read-format\");\n\nexports.getReadToken = getReadToken;\n\nfunction getReadToken(options) {\n  var format = ReadFormat.getReadFormat(options);\n\n  if (options && options.useraw) {\n    return init_useraw(format);\n  } else {\n    return init_token(format);\n  }\n}\n\nfunction init_token(format) {\n  var i;\n  var token = new Array(256); // positive fixint -- 0x00 - 0x7f\n\n  for (i = 0x00; i <= 0x7f; i++) {\n    token[i] = constant(i);\n  } // fixmap -- 0x80 - 0x8f\n\n\n  for (i = 0x80; i <= 0x8f; i++) {\n    token[i] = fix(i - 0x80, format.map);\n  } // fixarray -- 0x90 - 0x9f\n\n\n  for (i = 0x90; i <= 0x9f; i++) {\n    token[i] = fix(i - 0x90, format.array);\n  } // fixstr -- 0xa0 - 0xbf\n\n\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.str);\n  } // nil -- 0xc0\n\n\n  token[0xc0] = constant(null); // (never used) -- 0xc1\n\n  token[0xc1] = null; // false -- 0xc2\n  // true -- 0xc3\n\n  token[0xc2] = constant(false);\n  token[0xc3] = constant(true); // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n\n  token[0xc4] = flex(format.uint8, format.bin);\n  token[0xc5] = flex(format.uint16, format.bin);\n  token[0xc6] = flex(format.uint32, format.bin); // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n\n  token[0xc7] = flex(format.uint8, format.ext);\n  token[0xc8] = flex(format.uint16, format.ext);\n  token[0xc9] = flex(format.uint32, format.ext); // float 32 -- 0xca\n  // float 64 -- 0xcb\n\n  token[0xca] = format.float32;\n  token[0xcb] = format.float64; // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n\n  token[0xcc] = format.uint8;\n  token[0xcd] = format.uint16;\n  token[0xce] = format.uint32;\n  token[0xcf] = format.uint64; // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n\n  token[0xd0] = format.int8;\n  token[0xd1] = format.int16;\n  token[0xd2] = format.int32;\n  token[0xd3] = format.int64; // fixext 1 -- 0xd4\n  // fixext 2 -- 0xd5\n  // fixext 4 -- 0xd6\n  // fixext 8 -- 0xd7\n  // fixext 16 -- 0xd8\n\n  token[0xd4] = fix(1, format.ext);\n  token[0xd5] = fix(2, format.ext);\n  token[0xd6] = fix(4, format.ext);\n  token[0xd7] = fix(8, format.ext);\n  token[0xd8] = fix(16, format.ext); // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n\n  token[0xd9] = flex(format.uint8, format.str);\n  token[0xda] = flex(format.uint16, format.str);\n  token[0xdb] = flex(format.uint32, format.str); // array 16 -- 0xdc\n  // array 32 -- 0xdd\n\n  token[0xdc] = flex(format.uint16, format.array);\n  token[0xdd] = flex(format.uint32, format.array); // map 16 -- 0xde\n  // map 32 -- 0xdf\n\n  token[0xde] = flex(format.uint16, format.map);\n  token[0xdf] = flex(format.uint32, format.map); // negative fixint -- 0xe0 - 0xff\n\n  for (i = 0xe0; i <= 0xff; i++) {\n    token[i] = constant(i - 0x100);\n  }\n\n  return token;\n}\n\nfunction init_useraw(format) {\n  var i;\n  var token = init_token(format).slice(); // raw 8 -- 0xd9\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n\n  token[0xd9] = token[0xc4];\n  token[0xda] = token[0xc5];\n  token[0xdb] = token[0xc6]; // fixraw -- 0xa0 - 0xbf\n\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.bin);\n  }\n\n  return token;\n}\n\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\n\nfunction flex(lenFunc, decodeFunc) {\n  return function (decoder) {\n    var len = lenFunc(decoder);\n    return decodeFunc(decoder, len);\n  };\n}\n\nfunction fix(len, method) {\n  return function (decoder) {\n    return method(decoder, len);\n  };\n}","map":{"version":3,"sources":["C:/Users/kohmu/udonarium/node_modules/msgpack-lite/lib/read-token.js"],"names":["ReadFormat","require","exports","getReadToken","options","format","getReadFormat","useraw","init_useraw","init_token","i","token","Array","constant","fix","map","array","str","flex","uint8","bin","uint16","uint32","ext","float32","float64","uint64","int8","int16","int32","int64","slice","value","lenFunc","decodeFunc","decoder","len","method"],"mappings":"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","sourcesContent":["// read-token.js\n\nvar ReadFormat = require(\"./read-format\");\n\nexports.getReadToken = getReadToken;\n\nfunction getReadToken(options) {\n  var format = ReadFormat.getReadFormat(options);\n\n  if (options && options.useraw) {\n    return init_useraw(format);\n  } else {\n    return init_token(format);\n  }\n}\n\nfunction init_token(format) {\n  var i;\n  var token = new Array(256);\n\n  // positive fixint -- 0x00 - 0x7f\n  for (i = 0x00; i <= 0x7f; i++) {\n    token[i] = constant(i);\n  }\n\n  // fixmap -- 0x80 - 0x8f\n  for (i = 0x80; i <= 0x8f; i++) {\n    token[i] = fix(i - 0x80, format.map);\n  }\n\n  // fixarray -- 0x90 - 0x9f\n  for (i = 0x90; i <= 0x9f; i++) {\n    token[i] = fix(i - 0x90, format.array);\n  }\n\n  // fixstr -- 0xa0 - 0xbf\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.str);\n  }\n\n  // nil -- 0xc0\n  token[0xc0] = constant(null);\n\n  // (never used) -- 0xc1\n  token[0xc1] = null;\n\n  // false -- 0xc2\n  // true -- 0xc3\n  token[0xc2] = constant(false);\n  token[0xc3] = constant(true);\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  token[0xc4] = flex(format.uint8, format.bin);\n  token[0xc5] = flex(format.uint16, format.bin);\n  token[0xc6] = flex(format.uint32, format.bin);\n\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  token[0xc7] = flex(format.uint8, format.ext);\n  token[0xc8] = flex(format.uint16, format.ext);\n  token[0xc9] = flex(format.uint32, format.ext);\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = format.float32;\n  token[0xcb] = format.float64;\n\n  // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n  token[0xcc] = format.uint8;\n  token[0xcd] = format.uint16;\n  token[0xce] = format.uint32;\n  token[0xcf] = format.uint64;\n\n  // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n  token[0xd0] = format.int8;\n  token[0xd1] = format.int16;\n  token[0xd2] = format.int32;\n  token[0xd3] = format.int64;\n\n  // fixext 1 -- 0xd4\n  // fixext 2 -- 0xd5\n  // fixext 4 -- 0xd6\n  // fixext 8 -- 0xd7\n  // fixext 16 -- 0xd8\n  token[0xd4] = fix(1, format.ext);\n  token[0xd5] = fix(2, format.ext);\n  token[0xd6] = fix(4, format.ext);\n  token[0xd7] = fix(8, format.ext);\n  token[0xd8] = fix(16, format.ext);\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  token[0xd9] = flex(format.uint8, format.str);\n  token[0xda] = flex(format.uint16, format.str);\n  token[0xdb] = flex(format.uint32, format.str);\n\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  token[0xdc] = flex(format.uint16, format.array);\n  token[0xdd] = flex(format.uint32, format.array);\n\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  token[0xde] = flex(format.uint16, format.map);\n  token[0xdf] = flex(format.uint32, format.map);\n\n  // negative fixint -- 0xe0 - 0xff\n  for (i = 0xe0; i <= 0xff; i++) {\n    token[i] = constant(i - 0x100);\n  }\n\n  return token;\n}\n\nfunction init_useraw(format) {\n  var i;\n  var token = init_token(format).slice();\n\n  // raw 8 -- 0xd9\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n  token[0xd9] = token[0xc4];\n  token[0xda] = token[0xc5];\n  token[0xdb] = token[0xc6];\n\n  // fixraw -- 0xa0 - 0xbf\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.bin);\n  }\n\n  return token;\n}\n\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nfunction flex(lenFunc, decodeFunc) {\n  return function(decoder) {\n    var len = lenFunc(decoder);\n    return decodeFunc(decoder, len);\n  };\n}\n\nfunction fix(len, method) {\n  return function(decoder) {\n    return method(decoder, len);\n  };\n}\n"]},"metadata":{},"sourceType":"script"}