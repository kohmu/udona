{"ast":null,"code":"// encode-buffer.js\nexports.EncodeBuffer = EncodeBuffer;\n\nvar preset = require(\"./write-core\").preset;\n\nvar FlexEncoder = require(\"./flex-buffer\").FlexEncoder;\n\nFlexEncoder.mixin(EncodeBuffer.prototype);\n\nfunction EncodeBuffer(options) {\n  if (!(this instanceof EncodeBuffer)) return new EncodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nEncodeBuffer.prototype.codec = preset;\n\nEncodeBuffer.prototype.write = function (input) {\n  this.codec.encode(this, input);\n};","map":{"version":3,"sources":["C:/Users/kohmu/udonarium/node_modules/msgpack-lite/lib/encode-buffer.js"],"names":["exports","EncodeBuffer","preset","require","FlexEncoder","mixin","prototype","options","codec","bufferish","write","input","encode"],"mappings":"AAAA;AAEAA,OAAO,CAACC,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBD,MAArC;;AAEA,IAAIE,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAP,CAAyBC,WAA3C;;AAEAA,WAAW,CAACC,KAAZ,CAAkBJ,YAAY,CAACK,SAA/B;;AAEA,SAASL,YAAT,CAAsBM,OAAtB,EAA+B;AAC7B,MAAI,EAAE,gBAAgBN,YAAlB,CAAJ,EAAqC,OAAO,IAAIA,YAAJ,CAAiBM,OAAjB,CAAP;;AAErC,MAAIA,OAAJ,EAAa;AACX,SAAKA,OAAL,GAAeA,OAAf;;AACA,QAAIA,OAAO,CAACC,KAAZ,EAAmB;AACjB,UAAIA,KAAK,GAAG,KAAKA,KAAL,GAAaD,OAAO,CAACC,KAAjC;AACA,UAAIA,KAAK,CAACC,SAAV,EAAqB,KAAKA,SAAL,GAAiBD,KAAK,CAACC,SAAvB;AACtB;AACF;AACF;;AAEDR,YAAY,CAACK,SAAb,CAAuBE,KAAvB,GAA+BN,MAA/B;;AAEAD,YAAY,CAACK,SAAb,CAAuBI,KAAvB,GAA+B,UAASC,KAAT,EAAgB;AAC7C,OAAKH,KAAL,CAAWI,MAAX,CAAkB,IAAlB,EAAwBD,KAAxB;AACD,CAFD","sourcesContent":["// encode-buffer.js\n\nexports.EncodeBuffer = EncodeBuffer;\n\nvar preset = require(\"./write-core\").preset;\n\nvar FlexEncoder = require(\"./flex-buffer\").FlexEncoder;\n\nFlexEncoder.mixin(EncodeBuffer.prototype);\n\nfunction EncodeBuffer(options) {\n  if (!(this instanceof EncodeBuffer)) return new EncodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nEncodeBuffer.prototype.codec = preset;\n\nEncodeBuffer.prototype.write = function(input) {\n  this.codec.encode(this, input);\n};\n"]},"metadata":{},"sourceType":"script"}