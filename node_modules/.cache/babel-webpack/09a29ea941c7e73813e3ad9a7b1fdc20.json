{"ast":null,"code":"// read-token.js\nvar ReadFormat = require(\"./read-format\");\n\nexports.getReadToken = getReadToken;\n\nfunction getReadToken(options) {\n  var format = ReadFormat.getReadFormat(options);\n\n  if (options && options.useraw) {\n    return init_useraw(format);\n  } else {\n    return init_token(format);\n  }\n}\n\nfunction init_token(format) {\n  var i;\n  var token = new Array(256); // positive fixint -- 0x00 - 0x7f\n\n  for (i = 0x00; i <= 0x7f; i++) {\n    token[i] = constant(i);\n  } // fixmap -- 0x80 - 0x8f\n\n\n  for (i = 0x80; i <= 0x8f; i++) {\n    token[i] = fix(i - 0x80, format.map);\n  } // fixarray -- 0x90 - 0x9f\n\n\n  for (i = 0x90; i <= 0x9f; i++) {\n    token[i] = fix(i - 0x90, format.array);\n  } // fixstr -- 0xa0 - 0xbf\n\n\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.str);\n  } // nil -- 0xc0\n\n\n  token[0xc0] = constant(null); // (never used) -- 0xc1\n\n  token[0xc1] = null; // false -- 0xc2\n  // true -- 0xc3\n\n  token[0xc2] = constant(false);\n  token[0xc3] = constant(true); // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n\n  token[0xc4] = flex(format.uint8, format.bin);\n  token[0xc5] = flex(format.uint16, format.bin);\n  token[0xc6] = flex(format.uint32, format.bin); // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n\n  token[0xc7] = flex(format.uint8, format.ext);\n  token[0xc8] = flex(format.uint16, format.ext);\n  token[0xc9] = flex(format.uint32, format.ext); // float 32 -- 0xca\n  // float 64 -- 0xcb\n\n  token[0xca] = format.float32;\n  token[0xcb] = format.float64; // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n\n  token[0xcc] = format.uint8;\n  token[0xcd] = format.uint16;\n  token[0xce] = format.uint32;\n  token[0xcf] = format.uint64; // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n\n  token[0xd0] = format.int8;\n  token[0xd1] = format.int16;\n  token[0xd2] = format.int32;\n  token[0xd3] = format.int64; // fixext 1 -- 0xd4\n  // fixext 2 -- 0xd5\n  // fixext 4 -- 0xd6\n  // fixext 8 -- 0xd7\n  // fixext 16 -- 0xd8\n\n  token[0xd4] = fix(1, format.ext);\n  token[0xd5] = fix(2, format.ext);\n  token[0xd6] = fix(4, format.ext);\n  token[0xd7] = fix(8, format.ext);\n  token[0xd8] = fix(16, format.ext); // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n\n  token[0xd9] = flex(format.uint8, format.str);\n  token[0xda] = flex(format.uint16, format.str);\n  token[0xdb] = flex(format.uint32, format.str); // array 16 -- 0xdc\n  // array 32 -- 0xdd\n\n  token[0xdc] = flex(format.uint16, format.array);\n  token[0xdd] = flex(format.uint32, format.array); // map 16 -- 0xde\n  // map 32 -- 0xdf\n\n  token[0xde] = flex(format.uint16, format.map);\n  token[0xdf] = flex(format.uint32, format.map); // negative fixint -- 0xe0 - 0xff\n\n  for (i = 0xe0; i <= 0xff; i++) {\n    token[i] = constant(i - 0x100);\n  }\n\n  return token;\n}\n\nfunction init_useraw(format) {\n  var i;\n  var token = init_token(format).slice(); // raw 8 -- 0xd9\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n\n  token[0xd9] = token[0xc4];\n  token[0xda] = token[0xc5];\n  token[0xdb] = token[0xc6]; // fixraw -- 0xa0 - 0xbf\n\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.bin);\n  }\n\n  return token;\n}\n\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\n\nfunction flex(lenFunc, decodeFunc) {\n  return function (decoder) {\n    var len = lenFunc(decoder);\n    return decodeFunc(decoder, len);\n  };\n}\n\nfunction fix(len, method) {\n  return function (decoder) {\n    return method(decoder, len);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}