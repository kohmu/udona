{"ast":null,"code":"// buffer-lite.js\nvar MAXBUFLEN = 8192;\nexports.copy = copy;\nexports.toString = toString;\nexports.write = write;\n/**\n * Buffer.prototype.write()\n *\n * @param string {String}\n * @param [offset] {Number}\n * @returns {Number}\n */\n\nfunction write(string, offset) {\n  var buffer = this;\n  var index = offset || (offset |= 0);\n  var length = string.length;\n  var chr = 0;\n  var i = 0;\n\n  while (i < length) {\n    chr = string.charCodeAt(i++);\n\n    if (chr < 128) {\n      buffer[index++] = chr;\n    } else if (chr < 0x800) {\n      // 2 bytes\n      buffer[index++] = 0xC0 | chr >>> 6;\n      buffer[index++] = 0x80 | chr & 0x3F;\n    } else if (chr < 0xD800 || chr > 0xDFFF) {\n      // 3 bytes\n      buffer[index++] = 0xE0 | chr >>> 12;\n      buffer[index++] = 0x80 | chr >>> 6 & 0x3F;\n      buffer[index++] = 0x80 | chr & 0x3F;\n    } else {\n      // 4 bytes - surrogate pair\n      chr = (chr - 0xD800 << 10 | string.charCodeAt(i++) - 0xDC00) + 0x10000;\n      buffer[index++] = 0xF0 | chr >>> 18;\n      buffer[index++] = 0x80 | chr >>> 12 & 0x3F;\n      buffer[index++] = 0x80 | chr >>> 6 & 0x3F;\n      buffer[index++] = 0x80 | chr & 0x3F;\n    }\n  }\n\n  return index - offset;\n}\n/**\n * Buffer.prototype.toString()\n *\n * @param [encoding] {String} ignored\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {String}\n */\n\n\nfunction toString(encoding, start, end) {\n  var buffer = this;\n  var index = start | 0;\n  if (!end) end = buffer.length;\n  var string = '';\n  var chr = 0;\n\n  while (index < end) {\n    chr = buffer[index++];\n\n    if (chr < 128) {\n      string += String.fromCharCode(chr);\n      continue;\n    }\n\n    if ((chr & 0xE0) === 0xC0) {\n      // 2 bytes\n      chr = (chr & 0x1F) << 6 | buffer[index++] & 0x3F;\n    } else if ((chr & 0xF0) === 0xE0) {\n      // 3 bytes\n      chr = (chr & 0x0F) << 12 | (buffer[index++] & 0x3F) << 6 | buffer[index++] & 0x3F;\n    } else if ((chr & 0xF8) === 0xF0) {\n      // 4 bytes\n      chr = (chr & 0x07) << 18 | (buffer[index++] & 0x3F) << 12 | (buffer[index++] & 0x3F) << 6 | buffer[index++] & 0x3F;\n    }\n\n    if (chr >= 0x010000) {\n      // A surrogate pair\n      chr -= 0x010000;\n      string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n    } else {\n      string += String.fromCharCode(chr);\n    }\n  }\n\n  return string;\n}\n/**\n * Buffer.prototype.copy()\n *\n * @param target {Buffer}\n * @param [targetStart] {Number}\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {number}\n */\n\n\nfunction copy(target, targetStart, start, end) {\n  var i;\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (!targetStart) targetStart = 0;\n  var len = end - start;\n\n  if (target === this && start < targetStart && targetStart < end) {\n    // descending\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    // ascending\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start];\n    }\n  }\n\n  return len;\n}","map":{"version":3,"sources":["C:/Users/kohmu/udonarium/node_modules/msgpack-lite/lib/buffer-lite.js"],"names":["MAXBUFLEN","exports","copy","toString","write","string","offset","buffer","index","length","chr","i","charCodeAt","encoding","start","end","String","fromCharCode","target","targetStart","len"],"mappings":"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","sourcesContent":["// buffer-lite.js\n\nvar MAXBUFLEN = 8192;\n\nexports.copy = copy;\nexports.toString = toString;\nexports.write = write;\n\n/**\n * Buffer.prototype.write()\n *\n * @param string {String}\n * @param [offset] {Number}\n * @returns {Number}\n */\n\nfunction write(string, offset) {\n  var buffer = this;\n  var index = offset || (offset |= 0);\n  var length = string.length;\n  var chr = 0;\n  var i = 0;\n  while (i < length) {\n    chr = string.charCodeAt(i++);\n\n    if (chr < 128) {\n      buffer[index++] = chr;\n    } else if (chr < 0x800) {\n      // 2 bytes\n      buffer[index++] = 0xC0 | (chr >>> 6);\n      buffer[index++] = 0x80 | (chr & 0x3F);\n    } else if (chr < 0xD800 || chr > 0xDFFF) {\n      // 3 bytes\n      buffer[index++] = 0xE0 | (chr  >>> 12);\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\n      buffer[index++] = 0x80 | (chr          & 0x3F);\n    } else {\n      // 4 bytes - surrogate pair\n      chr = (((chr - 0xD800) << 10) | (string.charCodeAt(i++) - 0xDC00)) + 0x10000;\n      buffer[index++] = 0xF0 | (chr >>> 18);\n      buffer[index++] = 0x80 | ((chr >>> 12) & 0x3F);\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\n      buffer[index++] = 0x80 | (chr          & 0x3F);\n    }\n  }\n  return index - offset;\n}\n\n/**\n * Buffer.prototype.toString()\n *\n * @param [encoding] {String} ignored\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {String}\n */\n\nfunction toString(encoding, start, end) {\n  var buffer = this;\n  var index = start|0;\n  if (!end) end = buffer.length;\n  var string = '';\n  var chr = 0;\n\n  while (index < end) {\n    chr = buffer[index++];\n    if (chr < 128) {\n      string += String.fromCharCode(chr);\n      continue;\n    }\n\n    if ((chr & 0xE0) === 0xC0) {\n      // 2 bytes\n      chr = (chr & 0x1F) << 6 |\n            (buffer[index++] & 0x3F);\n\n    } else if ((chr & 0xF0) === 0xE0) {\n      // 3 bytes\n      chr = (chr & 0x0F)             << 12 |\n            (buffer[index++] & 0x3F) << 6  |\n            (buffer[index++] & 0x3F);\n\n    } else if ((chr & 0xF8) === 0xF0) {\n      // 4 bytes\n      chr = (chr & 0x07)             << 18 |\n            (buffer[index++] & 0x3F) << 12 |\n            (buffer[index++] & 0x3F) << 6  |\n            (buffer[index++] & 0x3F);\n    }\n\n    if (chr >= 0x010000) {\n      // A surrogate pair\n      chr -= 0x010000;\n\n      string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n    } else {\n      string += String.fromCharCode(chr);\n    }\n  }\n\n  return string;\n}\n\n/**\n * Buffer.prototype.copy()\n *\n * @param target {Buffer}\n * @param [targetStart] {Number}\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {number}\n */\n\nfunction copy(target, targetStart, start, end) {\n  var i;\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (!targetStart) targetStart = 0;\n  var len = end - start;\n\n  if (target === this && start < targetStart && targetStart < end) {\n    // descending\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    // ascending\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start];\n    }\n  }\n\n  return len;\n}\n"]},"metadata":{},"sourceType":"script"}