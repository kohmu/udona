{"ast":null,"code":"// read-format.js\nvar ieee754 = require(\"ieee754\");\n\nvar Int64Buffer = require(\"int64-buffer\");\n\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\nexports.getReadFormat = getReadFormat;\nexports.readUint8 = uint8;\n\nvar Bufferish = require(\"./bufferish\");\n\nvar BufferProto = require(\"./bufferish-proto\");\n\nvar HAS_MAP = \"undefined\" !== typeof Map;\nvar NO_ASSERT = true;\n\nfunction getReadFormat(options) {\n  var binarraybuffer = Bufferish.hasArrayBuffer && options && options.binarraybuffer;\n  var int64 = options && options.int64;\n  var usemap = HAS_MAP && options && options.usemap;\n  var readFormat = {\n    map: usemap ? map_to_map : map_to_obj,\n    array: array,\n    str: str,\n    bin: binarraybuffer ? bin_arraybuffer : bin_buffer,\n    ext: ext,\n    uint8: uint8,\n    uint16: uint16,\n    uint32: uint32,\n    uint64: read(8, int64 ? readUInt64BE_int64 : readUInt64BE),\n    int8: int8,\n    int16: int16,\n    int32: int32,\n    int64: read(8, int64 ? readInt64BE_int64 : readInt64BE),\n    float32: read(4, readFloatBE),\n    float64: read(8, readDoubleBE)\n  };\n  return readFormat;\n}\n\nfunction map_to_obj(decoder, len) {\n  var value = {};\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n  var decode = decoder.codec.decode;\n\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n\n  for (i = 0; i < len; i++) {\n    value[k[i]] = v[i];\n  }\n\n  return value;\n}\n\nfunction map_to_map(decoder, len) {\n  var value = new Map();\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n  var decode = decoder.codec.decode;\n\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n\n  for (i = 0; i < len; i++) {\n    value.set(k[i], v[i]);\n  }\n\n  return value;\n}\n\nfunction array(decoder, len) {\n  var value = new Array(len);\n  var decode = decoder.codec.decode;\n\n  for (var i = 0; i < len; i++) {\n    value[i] = decode(decoder);\n  }\n\n  return value;\n}\n\nfunction str(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  return BufferProto.toString.call(decoder.buffer, \"utf-8\", start, end);\n}\n\nfunction bin_buffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.from(buf);\n}\n\nfunction bin_arraybuffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.Uint8Array.from(buf).buffer;\n}\n\nfunction ext(decoder, len) {\n  var start = decoder.reserve(len + 1);\n  var type = decoder.buffer[start++];\n  var end = start + len;\n  var unpack = decoder.codec.getExtUnpacker(type);\n  if (!unpack) throw new Error(\"Invalid ext type: \" + (type ? \"0x\" + type.toString(16) : type));\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return unpack(buf);\n}\n\nfunction uint8(decoder) {\n  var start = decoder.reserve(1);\n  return decoder.buffer[start];\n}\n\nfunction int8(decoder) {\n  var start = decoder.reserve(1);\n  var value = decoder.buffer[start];\n  return value & 0x80 ? value - 0x100 : value;\n}\n\nfunction uint16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  return buffer[start++] << 8 | buffer[start];\n}\n\nfunction int16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  var value = buffer[start++] << 8 | buffer[start];\n  return value & 0x8000 ? value - 0x10000 : value;\n}\n\nfunction uint32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return buffer[start++] * 16777216 + (buffer[start++] << 16) + (buffer[start++] << 8) + buffer[start];\n}\n\nfunction int32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return buffer[start++] << 24 | buffer[start++] << 16 | buffer[start++] << 8 | buffer[start];\n}\n\nfunction read(len, method) {\n  return function (decoder) {\n    var start = decoder.reserve(len);\n    return method.call(decoder.buffer, start, NO_ASSERT);\n  };\n}\n\nfunction readUInt64BE(start) {\n  return new Uint64BE(this, start).toNumber();\n}\n\nfunction readInt64BE(start) {\n  return new Int64BE(this, start).toNumber();\n}\n\nfunction readUInt64BE_int64(start) {\n  return new Uint64BE(this, start);\n}\n\nfunction readInt64BE_int64(start) {\n  return new Int64BE(this, start);\n}\n\nfunction readFloatBE(start) {\n  return ieee754.read(this, start, false, 23, 4);\n}\n\nfunction readDoubleBE(start) {\n  return ieee754.read(this, start, false, 52, 8);\n}","map":{"version":3,"sources":["C:/Users/kohmu/udonarium/node_modules/msgpack-lite/lib/read-format.js"],"names":["ieee754","require","Int64Buffer","Uint64BE","Int64BE","exports","getReadFormat","readUint8","uint8","Bufferish","BufferProto","HAS_MAP","Map","NO_ASSERT","options","binarraybuffer","hasArrayBuffer","int64","usemap","readFormat","map","map_to_map","map_to_obj","array","str","bin","bin_arraybuffer","bin_buffer","ext","uint16","uint32","uint64","read","readUInt64BE_int64","readUInt64BE","int8","int16","int32","readInt64BE_int64","readInt64BE","float32","readFloatBE","float64","readDoubleBE","decoder","len","value","i","k","Array","v","decode","codec","set","start","reserve","end","toString","call","buffer","buf","slice","from","Uint8Array","type","unpack","getExtUnpacker","Error","method","toNumber"],"mappings":"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","sourcesContent":["// read-format.js\n\nvar ieee754 = require(\"ieee754\");\nvar Int64Buffer = require(\"int64-buffer\");\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\n\nexports.getReadFormat = getReadFormat;\nexports.readUint8 = uint8;\n\nvar Bufferish = require(\"./bufferish\");\nvar BufferProto = require(\"./bufferish-proto\");\n\nvar HAS_MAP = (\"undefined\" !== typeof Map);\nvar NO_ASSERT = true;\n\nfunction getReadFormat(options) {\n  var binarraybuffer = Bufferish.hasArrayBuffer && options && options.binarraybuffer;\n  var int64 = options && options.int64;\n  var usemap = HAS_MAP && options && options.usemap;\n\n  var readFormat = {\n    map: (usemap ? map_to_map : map_to_obj),\n    array: array,\n    str: str,\n    bin: (binarraybuffer ? bin_arraybuffer : bin_buffer),\n    ext: ext,\n    uint8: uint8,\n    uint16: uint16,\n    uint32: uint32,\n    uint64: read(8, int64 ? readUInt64BE_int64 : readUInt64BE),\n    int8: int8,\n    int16: int16,\n    int32: int32,\n    int64: read(8, int64 ? readInt64BE_int64 : readInt64BE),\n    float32: read(4, readFloatBE),\n    float64: read(8, readDoubleBE)\n  };\n\n  return readFormat;\n}\n\nfunction map_to_obj(decoder, len) {\n  var value = {};\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n\n  var decode = decoder.codec.decode;\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n  for (i = 0; i < len; i++) {\n    value[k[i]] = v[i];\n  }\n  return value;\n}\n\nfunction map_to_map(decoder, len) {\n  var value = new Map();\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n\n  var decode = decoder.codec.decode;\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n  for (i = 0; i < len; i++) {\n    value.set(k[i], v[i]);\n  }\n  return value;\n}\n\nfunction array(decoder, len) {\n  var value = new Array(len);\n  var decode = decoder.codec.decode;\n  for (var i = 0; i < len; i++) {\n    value[i] = decode(decoder);\n  }\n  return value;\n}\n\nfunction str(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  return BufferProto.toString.call(decoder.buffer, \"utf-8\", start, end);\n}\n\nfunction bin_buffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.from(buf);\n}\n\nfunction bin_arraybuffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.Uint8Array.from(buf).buffer;\n}\n\nfunction ext(decoder, len) {\n  var start = decoder.reserve(len+1);\n  var type = decoder.buffer[start++];\n  var end = start + len;\n  var unpack = decoder.codec.getExtUnpacker(type);\n  if (!unpack) throw new Error(\"Invalid ext type: \" + (type ? (\"0x\" + type.toString(16)) : type));\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return unpack(buf);\n}\n\nfunction uint8(decoder) {\n  var start = decoder.reserve(1);\n  return decoder.buffer[start];\n}\n\nfunction int8(decoder) {\n  var start = decoder.reserve(1);\n  var value = decoder.buffer[start];\n  return (value & 0x80) ? value - 0x100 : value;\n}\n\nfunction uint16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  return (buffer[start++] << 8) | buffer[start];\n}\n\nfunction int16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  var value = (buffer[start++] << 8) | buffer[start];\n  return (value & 0x8000) ? value - 0x10000 : value;\n}\n\nfunction uint32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return (buffer[start++] * 16777216) + (buffer[start++] << 16) + (buffer[start++] << 8) + buffer[start];\n}\n\nfunction int32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return (buffer[start++] << 24) | (buffer[start++] << 16) | (buffer[start++] << 8) | buffer[start];\n}\n\nfunction read(len, method) {\n  return function(decoder) {\n    var start = decoder.reserve(len);\n    return method.call(decoder.buffer, start, NO_ASSERT);\n  };\n}\n\nfunction readUInt64BE(start) {\n  return new Uint64BE(this, start).toNumber();\n}\n\nfunction readInt64BE(start) {\n  return new Int64BE(this, start).toNumber();\n}\n\nfunction readUInt64BE_int64(start) {\n  return new Uint64BE(this, start);\n}\n\nfunction readInt64BE_int64(start) {\n  return new Int64BE(this, start);\n}\n\nfunction readFloatBE(start) {\n  return ieee754.read(this, start, false, 23, 4);\n}\n\nfunction readDoubleBE(start) {\n  return ieee754.read(this, start, false, 52, 8);\n}"]},"metadata":{},"sourceType":"script"}