{"ast":null,"code":"// bufferish.js\nvar Buffer = exports.global = require(\"./buffer-global\");\n\nvar hasBuffer = exports.hasBuffer = Buffer && !!Buffer.isBuffer;\nvar hasArrayBuffer = exports.hasArrayBuffer = \"undefined\" !== typeof ArrayBuffer;\n\nvar isArray = exports.isArray = require(\"isarray\");\n\nexports.isArrayBuffer = hasArrayBuffer ? isArrayBuffer : _false;\nvar isBuffer = exports.isBuffer = hasBuffer ? Buffer.isBuffer : _false;\nvar isView = exports.isView = hasArrayBuffer ? ArrayBuffer.isView || _is(\"ArrayBuffer\", \"buffer\") : _false;\nexports.alloc = alloc;\nexports.concat = concat;\nexports.from = from;\n\nvar BufferArray = exports.Array = require(\"./bufferish-array\");\n\nvar BufferBuffer = exports.Buffer = require(\"./bufferish-buffer\");\n\nvar BufferUint8Array = exports.Uint8Array = require(\"./bufferish-uint8array\");\n\nvar BufferProto = exports.prototype = require(\"./bufferish-proto\");\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Buffer|Uint8Array|Array}\n */\n\n\nfunction from(value) {\n  if (typeof value === \"string\") {\n    return fromString.call(this, value);\n  } else {\n    return auto(this).from(value);\n  }\n}\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\n\nfunction alloc(size) {\n  return auto(this).alloc(size);\n}\n/**\n * @param list {Array} array of (Buffer|Uint8Array|Array)s\n * @param [length]\n * @returns {Buffer|Uint8Array|Array}\n */\n\n\nfunction concat(list, length) {\n  if (!length) {\n    length = 0;\n    Array.prototype.forEach.call(list, dryrun);\n  }\n\n  var ref = this !== exports && this || list[0];\n  var result = alloc.call(ref, length);\n  var offset = 0;\n  Array.prototype.forEach.call(list, append);\n  return result;\n\n  function dryrun(buffer) {\n    length += buffer.length;\n  }\n\n  function append(buffer) {\n    offset += BufferProto.copy.call(buffer, result, offset);\n  }\n}\n\nvar _isArrayBuffer = _is(\"ArrayBuffer\");\n\nfunction isArrayBuffer(value) {\n  return value instanceof ArrayBuffer || _isArrayBuffer(value);\n}\n/**\n * @private\n */\n\n\nfunction fromString(value) {\n  var expected = value.length * 3;\n  var that = alloc.call(this, expected);\n  var actual = BufferProto.write.call(that, value);\n\n  if (expected !== actual) {\n    that = BufferProto.slice.call(that, 0, actual);\n  }\n\n  return that;\n}\n\nfunction auto(that) {\n  return isBuffer(that) ? BufferBuffer : isView(that) ? BufferUint8Array : isArray(that) ? BufferArray : hasBuffer ? BufferBuffer : hasArrayBuffer ? BufferUint8Array : BufferArray;\n}\n\nfunction _false() {\n  return false;\n}\n\nfunction _is(name, key) {\n  /* jshint eqnull:true */\n  name = \"[object \" + name + \"]\";\n  return function (value) {\n    return value != null && {}.toString.call(key ? value[key] : value) === name;\n  };\n}","map":{"version":3,"sources":["C:/Users/kohmu/udonarium/node_modules/msgpack-lite/lib/bufferish.js"],"names":["Buffer","exports","global","require","hasBuffer","isBuffer","hasArrayBuffer","ArrayBuffer","isArray","isArrayBuffer","_false","isView","_is","alloc","concat","from","BufferArray","Array","BufferBuffer","BufferUint8Array","Uint8Array","BufferProto","prototype","value","fromString","call","auto","size","list","length","forEach","dryrun","ref","result","offset","append","buffer","copy","_isArrayBuffer","expected","that","actual","write","slice","name","key","toString"],"mappings":"AAAA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAACC,MAAR,GAAiBC,OAAO,CAAC,iBAAD,CAArC;;AACA,IAAIC,SAAS,GAAGH,OAAO,CAACG,SAAR,GAAoBJ,MAAM,IAAI,CAAC,CAACA,MAAM,CAACK,QAAvD;AACA,IAAIC,cAAc,GAAGL,OAAO,CAACK,cAAR,GAA0B,gBAAgB,OAAOC,WAAtE;;AAEA,IAAIC,OAAO,GAAGP,OAAO,CAACO,OAAR,GAAkBL,OAAO,CAAC,SAAD,CAAvC;;AACAF,OAAO,CAACQ,aAAR,GAAwBH,cAAc,GAAGG,aAAH,GAAmBC,MAAzD;AACA,IAAIL,QAAQ,GAAGJ,OAAO,CAACI,QAAR,GAAmBD,SAAS,GAAGJ,MAAM,CAACK,QAAV,GAAqBK,MAAhE;AACA,IAAIC,MAAM,GAAGV,OAAO,CAACU,MAAR,GAAiBL,cAAc,GAAIC,WAAW,CAACI,MAAZ,IAAsBC,GAAG,CAAC,aAAD,EAAgB,QAAhB,CAA7B,GAA0DF,MAAtG;AAEAT,OAAO,CAACY,KAAR,GAAgBA,KAAhB;AACAZ,OAAO,CAACa,MAAR,GAAiBA,MAAjB;AACAb,OAAO,CAACc,IAAR,GAAeA,IAAf;;AAEA,IAAIC,WAAW,GAAGf,OAAO,CAACgB,KAAR,GAAgBd,OAAO,CAAC,mBAAD,CAAzC;;AACA,IAAIe,YAAY,GAAGjB,OAAO,CAACD,MAAR,GAAiBG,OAAO,CAAC,oBAAD,CAA3C;;AACA,IAAIgB,gBAAgB,GAAGlB,OAAO,CAACmB,UAAR,GAAqBjB,OAAO,CAAC,wBAAD,CAAnD;;AACA,IAAIkB,WAAW,GAAGpB,OAAO,CAACqB,SAAR,GAAoBnB,OAAO,CAAC,mBAAD,CAA7C;AAEA;AACA;AACA;AACA;;;AAEA,SAASY,IAAT,CAAcQ,KAAd,EAAqB;AACnB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOC,UAAU,CAACC,IAAX,CAAgB,IAAhB,EAAsBF,KAAtB,CAAP;AACD,GAFD,MAEO;AACL,WAAOG,IAAI,CAAC,IAAD,CAAJ,CAAWX,IAAX,CAAgBQ,KAAhB,CAAP;AACD;AACF;AAED;AACA;AACA;AACA;;;AAEA,SAASV,KAAT,CAAec,IAAf,EAAqB;AACnB,SAAOD,IAAI,CAAC,IAAD,CAAJ,CAAWb,KAAX,CAAiBc,IAAjB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AAEA,SAASb,MAAT,CAAgBc,IAAhB,EAAsBC,MAAtB,EAA8B;AAC5B,MAAI,CAACA,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG,CAAT;AACAZ,IAAAA,KAAK,CAACK,SAAN,CAAgBQ,OAAhB,CAAwBL,IAAxB,CAA6BG,IAA7B,EAAmCG,MAAnC;AACD;;AACD,MAAIC,GAAG,GAAI,SAAS/B,OAAV,IAAsB,IAAtB,IAA8B2B,IAAI,CAAC,CAAD,CAA5C;AACA,MAAIK,MAAM,GAAGpB,KAAK,CAACY,IAAN,CAAWO,GAAX,EAAgBH,MAAhB,CAAb;AACA,MAAIK,MAAM,GAAG,CAAb;AACAjB,EAAAA,KAAK,CAACK,SAAN,CAAgBQ,OAAhB,CAAwBL,IAAxB,CAA6BG,IAA7B,EAAmCO,MAAnC;AACA,SAAOF,MAAP;;AAEA,WAASF,MAAT,CAAgBK,MAAhB,EAAwB;AACtBP,IAAAA,MAAM,IAAIO,MAAM,CAACP,MAAjB;AACD;;AAED,WAASM,MAAT,CAAgBC,MAAhB,EAAwB;AACtBF,IAAAA,MAAM,IAAIb,WAAW,CAACgB,IAAZ,CAAiBZ,IAAjB,CAAsBW,MAAtB,EAA8BH,MAA9B,EAAsCC,MAAtC,CAAV;AACD;AACF;;AAED,IAAII,cAAc,GAAG1B,GAAG,CAAC,aAAD,CAAxB;;AAEA,SAASH,aAAT,CAAuBc,KAAvB,EAA8B;AAC5B,SAAQA,KAAK,YAAYhB,WAAlB,IAAkC+B,cAAc,CAACf,KAAD,CAAvD;AACD;AAED;AACA;AACA;;;AAEA,SAASC,UAAT,CAAoBD,KAApB,EAA2B;AACzB,MAAIgB,QAAQ,GAAGhB,KAAK,CAACM,MAAN,GAAe,CAA9B;AACA,MAAIW,IAAI,GAAG3B,KAAK,CAACY,IAAN,CAAW,IAAX,EAAiBc,QAAjB,CAAX;AACA,MAAIE,MAAM,GAAGpB,WAAW,CAACqB,KAAZ,CAAkBjB,IAAlB,CAAuBe,IAAvB,EAA6BjB,KAA7B,CAAb;;AACA,MAAIgB,QAAQ,KAAKE,MAAjB,EAAyB;AACvBD,IAAAA,IAAI,GAAGnB,WAAW,CAACsB,KAAZ,CAAkBlB,IAAlB,CAAuBe,IAAvB,EAA6B,CAA7B,EAAgCC,MAAhC,CAAP;AACD;;AACD,SAAOD,IAAP;AACD;;AAED,SAASd,IAAT,CAAcc,IAAd,EAAoB;AAClB,SAAOnC,QAAQ,CAACmC,IAAD,CAAR,GAAiBtB,YAAjB,GACHP,MAAM,CAAC6B,IAAD,CAAN,GAAerB,gBAAf,GACAX,OAAO,CAACgC,IAAD,CAAP,GAAgBxB,WAAhB,GACAZ,SAAS,GAAGc,YAAH,GACTZ,cAAc,GAAGa,gBAAH,GACdH,WALJ;AAMD;;AAED,SAASN,MAAT,GAAkB;AAChB,SAAO,KAAP;AACD;;AAED,SAASE,GAAT,CAAagC,IAAb,EAAmBC,GAAnB,EAAwB;AACtB;AACAD,EAAAA,IAAI,GAAG,aAAaA,IAAb,GAAoB,GAA3B;AACA,SAAO,UAASrB,KAAT,EAAgB;AACrB,WAAQA,KAAK,IAAI,IAAV,IAAmB,GAAGuB,QAAH,CAAYrB,IAAZ,CAAiBoB,GAAG,GAAGtB,KAAK,CAACsB,GAAD,CAAR,GAAgBtB,KAApC,MAA+CqB,IAAzE;AACD,GAFD;AAGD","sourcesContent":["// bufferish.js\n\nvar Buffer = exports.global = require(\"./buffer-global\");\nvar hasBuffer = exports.hasBuffer = Buffer && !!Buffer.isBuffer;\nvar hasArrayBuffer = exports.hasArrayBuffer = (\"undefined\" !== typeof ArrayBuffer);\n\nvar isArray = exports.isArray = require(\"isarray\");\nexports.isArrayBuffer = hasArrayBuffer ? isArrayBuffer : _false;\nvar isBuffer = exports.isBuffer = hasBuffer ? Buffer.isBuffer : _false;\nvar isView = exports.isView = hasArrayBuffer ? (ArrayBuffer.isView || _is(\"ArrayBuffer\", \"buffer\")) : _false;\n\nexports.alloc = alloc;\nexports.concat = concat;\nexports.from = from;\n\nvar BufferArray = exports.Array = require(\"./bufferish-array\");\nvar BufferBuffer = exports.Buffer = require(\"./bufferish-buffer\");\nvar BufferUint8Array = exports.Uint8Array = require(\"./bufferish-uint8array\");\nvar BufferProto = exports.prototype = require(\"./bufferish-proto\");\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction from(value) {\n  if (typeof value === \"string\") {\n    return fromString.call(this, value);\n  } else {\n    return auto(this).from(value);\n  }\n}\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return auto(this).alloc(size);\n}\n\n/**\n * @param list {Array} array of (Buffer|Uint8Array|Array)s\n * @param [length]\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction concat(list, length) {\n  if (!length) {\n    length = 0;\n    Array.prototype.forEach.call(list, dryrun);\n  }\n  var ref = (this !== exports) && this || list[0];\n  var result = alloc.call(ref, length);\n  var offset = 0;\n  Array.prototype.forEach.call(list, append);\n  return result;\n\n  function dryrun(buffer) {\n    length += buffer.length;\n  }\n\n  function append(buffer) {\n    offset += BufferProto.copy.call(buffer, result, offset);\n  }\n}\n\nvar _isArrayBuffer = _is(\"ArrayBuffer\");\n\nfunction isArrayBuffer(value) {\n  return (value instanceof ArrayBuffer) || _isArrayBuffer(value);\n}\n\n/**\n * @private\n */\n\nfunction fromString(value) {\n  var expected = value.length * 3;\n  var that = alloc.call(this, expected);\n  var actual = BufferProto.write.call(that, value);\n  if (expected !== actual) {\n    that = BufferProto.slice.call(that, 0, actual);\n  }\n  return that;\n}\n\nfunction auto(that) {\n  return isBuffer(that) ? BufferBuffer\n    : isView(that) ? BufferUint8Array\n    : isArray(that) ? BufferArray\n    : hasBuffer ? BufferBuffer\n    : hasArrayBuffer ? BufferUint8Array\n    : BufferArray;\n}\n\nfunction _false() {\n  return false;\n}\n\nfunction _is(name, key) {\n  /* jshint eqnull:true */\n  name = \"[object \" + name + \"]\";\n  return function(value) {\n    return (value != null) && {}.toString.call(key ? value[key] : value) === name;\n  };\n}"]},"metadata":{},"sourceType":"script"}